#include "UserEvent.h"

namespace xihad { namespace ngn
{
	const char* KeyCode_helper::toString( irr::EKEY_CODE keyCode )
	{
		switch (keyCode)
		{
		case irr::KEY_LBUTTON:
			return "LBUTTON";
		case irr::KEY_RBUTTON:
			return "RBUTTON";
		case irr::KEY_CANCEL:
			return "CANCEL";
		case irr::KEY_MBUTTON:
			return "MBUTTON";
		case irr::KEY_XBUTTON1:
			return "XBUTTON1";
		case irr::KEY_XBUTTON2:
			return "XBUTTON2";
		case irr::KEY_BACK:
			return "BACK";
		case irr::KEY_TAB:
			return "TAB";
		case irr::KEY_CLEAR:
			return "CLEAR";
		case irr::KEY_RETURN:
			return "RETURN";
		case irr::KEY_SHIFT:
			return "SHIFT";
		case irr::KEY_CONTROL:
			return "CONTROL";
		case irr::KEY_MENU:
			return "MENU";
		case irr::KEY_PAUSE:
			return "PAUSE";
		case irr::KEY_CAPITAL:
			return "CAPITAL";
		case irr::KEY_KANA:
			return "KANA";
		case irr::KEY_JUNJA:
			return "JUNJA";
		case irr::KEY_FINAL:
			return "FINAL";
		case irr::KEY_HANJA:
			return "HANJA";
		case irr::KEY_ESCAPE:
			return "ESCAPE";
		case irr::KEY_CONVERT:
			return "CONVERT";
		case irr::KEY_NONCONVERT:
			return "NONCONVERT";
		case irr::KEY_ACCEPT:
			return "ACCEPT";
		case irr::KEY_MODECHANGE:
			return "MODECHANGE";
		case irr::KEY_SPACE:
			return "SPACE";
		case irr::KEY_PRIOR:
			return "PRIOR";
		case irr::KEY_NEXT:
			return "NEXT";
		case irr::KEY_END:
			return "END";
		case irr::KEY_HOME:
			return "HOME";
		case irr::KEY_LEFT:
			return "LEFT";
		case irr::KEY_UP:
			return "UP";
		case irr::KEY_RIGHT:
			return "RIGHT";
		case irr::KEY_DOWN:
			return "DOWN";
		case irr::KEY_SELECT:
			return "SELECT";
		case irr::KEY_PRINT:
			return "PRINT";
		case irr::KEY_EXECUT:
			return "EXECUT";
		case irr::KEY_SNAPSHOT:
			return "SNAPSHOT";
		case irr::KEY_INSERT:
			return "INSERT";
		case irr::KEY_DELETE:
			return "DELETE";
		case irr::KEY_HELP:
			return "HELP";
		case irr::KEY_KEY_0:
			return "0";
		case irr::KEY_KEY_1:
			return "1";
		case irr::KEY_KEY_2:
			return "2";
		case irr::KEY_KEY_3:
			return "3";
		case irr::KEY_KEY_4:
			return "4";
		case irr::KEY_KEY_5:
			return "5";
		case irr::KEY_KEY_6:
			return "6";
		case irr::KEY_KEY_7:
			return "7";
		case irr::KEY_KEY_8:
			return "8";
		case irr::KEY_KEY_9:
			return "9";
		case irr::KEY_KEY_A:
			return "A";
		case irr::KEY_KEY_B:
			return "B";
		case irr::KEY_KEY_C:
			return "C";
		case irr::KEY_KEY_D:
			return "D";
		case irr::KEY_KEY_E:
			return "E";
		case irr::KEY_KEY_F:
			return "F";
		case irr::KEY_KEY_G:
			return "G";
		case irr::KEY_KEY_H:
			return "H";
		case irr::KEY_KEY_I:
			return "I";
		case irr::KEY_KEY_J:
			return "J";
		case irr::KEY_KEY_K:
			return "K";
		case irr::KEY_KEY_L:
			return "L";
		case irr::KEY_KEY_M:
			return "M";
		case irr::KEY_KEY_N:
			return "N";
		case irr::KEY_KEY_O:
			return "O";
		case irr::KEY_KEY_P:
			return "P";
		case irr::KEY_KEY_Q:
			return "Q";
		case irr::KEY_KEY_R:
			return "R";
		case irr::KEY_KEY_S:
			return "S";
		case irr::KEY_KEY_T:
			return "T";
		case irr::KEY_KEY_U:
			return "U";
		case irr::KEY_KEY_V:
			return "V";
		case irr::KEY_KEY_W:
			return "W";
		case irr::KEY_KEY_X:
			return "X";
		case irr::KEY_KEY_Y:
			return "Y";
		case irr::KEY_KEY_Z:
			return "Z";
		case irr::KEY_LWIN:
			return "LWIN";
		case irr::KEY_RWIN:
			return "RWIN";
		case irr::KEY_APPS:
			return "APPS";
		case irr::KEY_SLEEP:
			return "SLEEP";
		case irr::KEY_NUMPAD0:
			return "NUMPAD0";
		case irr::KEY_NUMPAD1:
			return "NUMPAD1";
		case irr::KEY_NUMPAD2:
			return "NUMPAD2";
		case irr::KEY_NUMPAD3:
			return "NUMPAD3";
		case irr::KEY_NUMPAD4:
			return "NUMPAD4";
		case irr::KEY_NUMPAD5:
			return "NUMPAD5";
		case irr::KEY_NUMPAD6:
			return "NUMPAD6";
		case irr::KEY_NUMPAD7:
			return "NUMPAD7";
		case irr::KEY_NUMPAD8:
			return "NUMPAD8";
		case irr::KEY_NUMPAD9:
			return "NUMPAD9";
		case irr::KEY_MULTIPLY:
			return "MULTIPLY";
		case irr::KEY_ADD:
			return "ADD";
		case irr::KEY_SEPARATOR:
			return "SEPARATOR";
		case irr::KEY_SUBTRACT:
			return "SUBTRACT";
		case irr::KEY_DECIMAL:
			return "DECIMAL";
		case irr::KEY_DIVIDE:
			return "DIVIDE";
		case irr::KEY_F1:
			return "F1";
		case irr::KEY_F2:
			return "F2";
		case irr::KEY_F3:
			return "F3";
		case irr::KEY_F4:
			return "F4";
		case irr::KEY_F5:
			return "F5";
		case irr::KEY_F6:
			return "F6";
		case irr::KEY_F7:
			return "F7";
		case irr::KEY_F8:
			return "F8";
		case irr::KEY_F9:
			return "F9";
		case irr::KEY_F10:
			return "F10";
		case irr::KEY_F11:
			return "F11";
		case irr::KEY_F12:
			return "F12";
		case irr::KEY_F13:
			return "F13";
		case irr::KEY_F14:
			return "F14";
		case irr::KEY_F15:
			return "F15";
		case irr::KEY_F16:
			return "F16";
		case irr::KEY_F17:
			return "F17";
		case irr::KEY_F18:
			return "F18";
		case irr::KEY_F19:
			return "F19";
		case irr::KEY_F20:
			return "F20";
		case irr::KEY_F21:
			return "F21";
		case irr::KEY_F22:
			return "F22";
		case irr::KEY_F23:
			return "F23";
		case irr::KEY_F24:
			return "F24";
		case irr::KEY_NUMLOCK:
			return "NUMLOCK";
		case irr::KEY_SCROLL:
			return "SCROLL";
		case irr::KEY_LSHIFT:
			return "LSHIFT";
		case irr::KEY_RSHIFT:
			return "RSHIFT";
		case irr::KEY_LCONTROL:
			return "LCONTROL";
		case irr::KEY_RCONTROL:
			return "RCONTROL";
		case irr::KEY_LMENU:
			return "LMENU";
		case irr::KEY_RMENU:
			return "RMENU";
		case irr::KEY_OEM_1:
			return "OEM_1";
		case irr::KEY_PLUS:
			return "PLUS";
		case irr::KEY_COMMA:
			return "COMMA";
		case irr::KEY_MINUS:
			return "MINUS";
		case irr::KEY_PERIOD:
			return "PERIOD";
		case irr::KEY_OEM_2:
			return "OEM_2";
		case irr::KEY_OEM_3:
			return "OEM_3";
		case irr::KEY_OEM_4:
			return "OEM_4";
		case irr::KEY_OEM_5:
			return "OEM_5";
		case irr::KEY_OEM_6:
			return "OEM_6";
		case irr::KEY_OEM_7:
			return "OEM_7";
		case irr::KEY_OEM_8:
			return "OEM_8";
		case irr::KEY_OEM_AX:
			return "OEM_AX";
		case irr::KEY_OEM_102:
			return "OEM_102";
		case irr::KEY_ATTN:
			return "ATTN";
		case irr::KEY_CRSEL:
			return "CRSEL";
		case irr::KEY_EXSEL:
			return "EXSEL";
		case irr::KEY_EREOF:
			return "EREOF";
		case irr::KEY_PLAY:
			return "PLAY";
		case irr::KEY_ZOOM:
			return "ZOOM";
		case irr::KEY_PA1:
			return "PA1";
		case irr::KEY_OEM_CLEAR:
			return "OEM_CLEAR";
		case irr::KEY_KEY_CODES_COUNT:
			return "KEY_CODES_COUNT";
		default:
			return "UNKNOWN";
		}
	}
}}
